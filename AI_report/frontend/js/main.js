const routeTable = {
  "河邊": {
    "酒館": [
      [{"x": 309, "y": 188}, {"x": 364, "y": 152}, {"x": 520, "y": 217}],
      [{"x": 304, "y": 195}, {"x": 374, "y": 153}, {"x": 436, "y": 193}, {"x": 535, "y": 137}, {"x": 587, "y": 178}],
      [{"x": 301, "y": 186}, {"x": 368, "y": 151}, {"x": 538, "y": 247}, {"x": 583, "y": 213}],
      [{"x": 308, "y": 185}, {"x": 365, "y": 153}, {"x": 435, "y": 191}, {"x": 502, "y": 142}, {"x": 588, "y": 169}]
    ],  // e.g. [{ x:40, y:180 }, { x:80, y:220 }, …]
    "李清照家":       [
      [{"x": 229, "y": 240}],
      [{"x": 208, "y": 280}],
      [{"x": 139, "y": 283}],
      [{"x": 176, "y": 249}]
    ],
    "李清照家的庭院": [
      [{"x": 245, "y": 292}, {"x": 195, "y": 263}, {"x": 172, "y": 201}],
      [{"x": 252, "y": 242}, {"x": 186, "y": 265}, {"x": 82, "y": 245}],
      [{"x": 188, "y": 262}, {"x": 111, "y": 204}],
      [{"x": 188, "y": 262}, {"x": 149, "y": 233}]
    ],
    "莊子家":         [
      [{"x": 275, "y": 279}, {"x": 339, "y": 329}],
      [{"x": 483, "y": 261}, {"x": 221, "y": 385}],
      [{"x": 277, "y": 281}, {"x": 344, "y": 332}, {"x": 453, "y": 274}],
      [{"x": 274, "y": 288}, {"x": 344, "y": 333}, {"x": 268, "y": 356}]
    ],
    "城門":           [
      [{"x": 519, "y": 277}, {"x": 391, "y": 350}, {"x": 464, "y": 400}],
      [{"x": 544, "y": 297}, {"x": 400, "y": 354}, {"x": 499, "y": 424}, {"x": 550, "y": 380}],
      [{"x": 574, "y": 309}, {"x": 384, "y": 392}],
      [{"x": 570, "y": 302}, {"x": 427, "y": 377}, {"x": 506, "y": 421}, {"x": 608, "y": 413}]
    ],
    "衙門":           [
      [{"x": 500, "y": 281}, {"x": 588, "y": 229}, {"x": 625, "y": 253}],
      [{"x": 503, "y": 283}, {"x": 640, "y": 188}, {"x": 689, "y": 219}, {"x": 657, "y": 231}],
      [{"x": 502, "y": 284}, {"x": 555, "y": 248}, {"x": 589, "y": 277}, {"x": 648, "y": 267}],
      [{"x": 502, "y": 284}, {"x": 555, "y": 248}, {"x": 589, "y": 277}, {"x": 648, "y": 267}]
    ],
    "診所":           [
      [{"x": 499, "y": 284}, {"x": 732, "y": 143}, {"x": 698, "y": 121}],
      [{"x": 500, "y": 277}, {"x": 693, "y": 175}, {"x": 656, "y": 144}],
      [{"x": 307, "y": 181}, {"x": 372, "y": 147}, {"x": 441, "y": 201}, {"x": 598, "y": 102}, {"x": 633, "y": 126}],
      [{"x": 308, "y": 187}, {"x": 368, "y": 151}, {"x": 427, "y": 199}, {"x": 554, "y": 125}, {"x": 626, "y": 164}]
    ],
    "書院":           [
      [{"x": 308, "y": 181}, {"x": 366, "y": 149}, {"x": 425, "y": 189}, {"x": 595, "y": 108}, {"x": 528, "y": 53}],
      [{"x": 306, "y": 183}, {"x": 464, "y": 86}],
      [{"x": 308, "y": 187}, {"x": 406, "y": 119}],
      [{"x": 304, "y": 185}, {"x": 362, "y": 148}, {"x": 423, "y": 188}, {"x": 496, "y": 144}, {"x": 452, "y": 109}]
    ],
    "河邊":  [
      [{"x": 337, "y": 192}],
      [{"x": 394, "y": 218}],
      [{"x": 416, "y": 252}],
      [{"x": 340, "y": 231}]
    ]
  },
  "酒館": {
    "河邊":           [
      [{"x": 614, "y": 175}, {"x": 518, "y": 125}, {"x": 424, "y": 190}, {"x": 368, "y": 153}, {"x": 313, "y": 179}, {"x": 337, "y": 192}],
      [{"x": 605, "y": 169}, {"x": 536, "y": 129}, {"x": 426, "y": 183}, {"x": 362, "y": 149}, {"x": 304, "y": 193}, {"x": 394, "y": 218}],
      [{"x": 613, "y": 175}, {"x": 536, "y": 128}, {"x": 423, "y": 189}, {"x": 364, "y": 152}, {"x": 285, "y": 197}, {"x": 416, "y": 252}],
      [{"x": 616, "y": 172}, {"x": 533, "y": 125}, {"x": 427, "y": 183}, {"x": 365, "y": 153}, {"x": 296, "y": 194}, {"x": 340, "y": 231}]
    ],
    "李清照家":       [
      [{"x": 608, "y": 173}, {"x": 524, "y": 129}, {"x": 429, "y": 190}, {"x": 368, "y": 150}, {"x": 265, "y": 202}, {"x": 317, "y": 236}, {"x": 204, "y": 293}],
      [{"x": 607, "y": 174}, {"x": 529, "y": 128}, {"x": 444, "y": 184}, {"x": 357, "y": 148}, {"x": 277, "y": 208}, {"x": 319, "y": 244}, {"x": 181, "y": 319}, {"x": 148, "y": 292}],
      [{"x": 612, "y": 173}, {"x": 520, "y": 128}, {"x": 416, "y": 190}, {"x": 357, "y": 157}, {"x": 268, "y": 211}, {"x": 313, "y": 237}, {"x": 232, "y": 285}, {"x": 176, "y": 242}],
      [{"x": 611, "y": 170}, {"x": 534, "y": 122}, {"x": 436, "y": 189}, {"x": 365, "y": 152}, {"x": 270, "y": 215}, {"x": 318, "y": 240}, {"x": 247, "y": 284}, {"x": 232, "y": 258}]
    ],
    "李清照家的庭院": [
      [{"x": 608, "y": 173}, {"x": 524, "y": 129}, {"x": 429, "y": 190}, {"x": 368, "y": 150}, {"x": 265, "y": 202}, {"x": 317, "y": 236}, {"x": 204, "y": 293},{"x": 73, "y": 250}],
      [{"x": 608, "y": 173}, {"x": 524, "y": 129}, {"x": 429, "y": 190}, {"x": 368, "y": 150}, {"x": 265, "y": 202}, {"x": 317, "y": 236}, {"x": 204, "y": 293},{"x": 112, "y": 226}],
      [{"x": 608, "y": 173}, {"x": 524, "y": 129}, {"x": 429, "y": 190}, {"x": 368, "y": 150}, {"x": 265, "y": 202}, {"x": 317, "y": 236}, {"x": 204, "y": 293},{"x": 142, "y": 204}],
      [{"x": 608, "y": 173}, {"x": 524, "y": 129}, {"x": 429, "y": 190}, {"x": 368, "y": 150}, {"x": 265, "y": 202}, {"x": 317, "y": 236}, {"x": 204, "y": 293},{"x": 182, "y": 209}]
    ],
    "莊子家":         [
      [{"x": 608, "y": 166}, {"x": 631, "y": 188}, {"x": 260, "y": 393}],
      [{"x": 606, "y": 166}, {"x": 640, "y": 193}, {"x": 321, "y": 358}],
      [{"x": 609, "y": 170}, {"x": 640, "y": 193}, {"x": 402, "y": 324}],
      [{"x": 608, "y": 165}, {"x": 635, "y": 194}, {"x": 455, "y": 296}]
    ],
    "城門":           [
      [{"x": 612, "y": 173}, {"x": 641, "y": 189}, {"x": 377, "y": 345}, {"x": 457, "y": 389}],
      [{"x": 616, "y": 177}, {"x": 644, "y": 192}, {"x": 370, "y": 349}, {"x": 500, "y": 432}, {"x": 543, "y": 405}],
      [{"x": 609, "y": 171}, {"x": 648, "y": 197}, {"x": 350, "y": 357}, {"x": 403, "y": 386}],
      [{"x": 608, "y": 174}, {"x": 647, "y": 198}, {"x": 370, "y": 348}, {"x": 440, "y": 381}, {"x": 508, "y": 350}]
    ],
    "衙門":           [
      [{"x": 612, "y": 170}, {"x": 656, "y": 194}, {"x": 559, "y": 249}, {"x": 588, "y": 260}],
      [{"x": 616, "y": 173}, {"x": 649, "y": 196}, {"x": 556, "y": 254}, {"x": 623, "y": 295}, {"x": 635, "y": 280}],
      [{"x": 612, "y": 169}, {"x": 664, "y": 201}, {"x": 634, "y": 209}],
      [{"x": 608, "y": 166}, {"x": 698, "y": 230}, {"x": 672, "y": 241}]
    ],
    "診所":           [
      [{"x": 608, "y": 158}, {"x": 624, "y": 135}],
      [{"x": 608, "y": 173}, {"x": 632, "y": 192}, {"x": 693, "y": 166}],
      [{"x": 604, "y": 167}, {"x": 578, "y": 144}, {"x": 635, "y": 105}, {"x": 681, "y": 119}],
      [{"x": 612, "y": 169}, {"x": 639, "y": 185}, {"x": 654, "y": 177}]
    ],
    "書院":           [
      [{"x": 614, "y": 173}, {"x": 560, "y": 142}, {"x": 536, "y": 156}, {"x": 462, "y": 114}, {"x": 384, "y": 121}],
      [{"x": 610, "y": 169}, {"x": 569, "y": 133}, {"x": 526, "y": 155}, {"x": 457, "y": 117}, {"x": 429, "y": 97}],
      [{"x": 616, "y": 174}, {"x": 560, "y": 146}, {"x": 544, "y": 156}, {"x": 464, "y": 114}, {"x": 464, "y": 76}],
      [{"x": 616, "y": 170}, {"x": 574, "y": 145}, {"x": 532, "y": 158}, {"x": 462, "y": 116}, {"x": 522, "y": 53}]
    ],
    "酒館":[
      [{"x": 496, "y": 216}],
      [{"x": 534, "y": 162}],
      [{"x": 596, "y": 170}],
      [{"x": 568, "y": 220}]
    ]
  },
  "李清照家": {
    "河邊":           [
      [{"x": 211, "y": 280}, {"x": 230, "y": 295}, {"x": 340, "y": 201}],
      [{"x": 202, "y": 276}, {"x": 222, "y": 290}, {"x": 387, "y": 224}],
      [{"x": 208, "y": 281}, {"x": 240, "y": 294}, {"x": 392, "y": 220}, {"x": 436, "y": 236}],
      [{"x": 207, "y": 288}, {"x": 226, "y": 302}, {"x": 343, "y": 240}]
    ],
    "酒館":           [
      [{"x": 222, "y": 296}, {"x": 323, "y": 233}, {"x": 273, "y": 204}, {"x": 360, "y": 145}, {"x": 496, "y": 216}],
      [{"x": 212, "y": 292}, {"x": 328, "y": 234}, {"x": 266, "y": 204}, {"x": 368, "y": 142}, {"x": 453, "y": 193}, {"x": 534, "y": 162}],
      [{"x": 222, "y": 293}, {"x": 317, "y": 229}, {"x": 276, "y": 203}, {"x": 364, "y": 141}, {"x": 460, "y": 194}, {"x": 530, "y": 140}, {"x": 596, "y": 170}],
      [{"x": 212, "y": 291}, {"x": 320, "y": 236}, {"x": 266, "y": 200}, {"x": 364, "y": 149}, {"x": 547, "y": 248}, {"x": 568, "y": 220}]
    ],
    "李清照家的庭院": [
      [{"x": 220, "y": 285}, {"x": 73, "y": 246}],
      [{"x": 221, "y": 281}, {"x": 113, "y": 222}],
      [{"x": 234, "y": 289}, {"x": 140, "y": 197}],
      [{"x": 223, "y": 285}, {"x": 179, "y": 206}]
    ],
    "莊子家":         [
      [{"x": 218, "y": 284}, {"x": 352, "y": 352}, {"x": 258, "y": 397}],
      [{"x": 217, "y": 281}, {"x": 358, "y": 350}, {"x": 321, "y": 360}],
      [{"x": 224, "y": 294}, {"x": 358, "y": 356}, {"x": 400, "y": 322}],
      [{"x": 229, "y": 290}, {"x": 360, "y": 349}, {"x": 458, "y": 297}]
    ],
    "城門":           [
      [{"x": 223, "y": 282}, {"x": 464, "y": 391}],
      [{"x": 224, "y": 285}, {"x": 507, "y": 433}, {"x": 544, "y": 406}],
      [{"x": 226, "y": 282}, {"x": 408, "y": 389}],
      [{"x": 230, "y": 289}, {"x": 420, "y": 382}, {"x": 508, "y": 352}]
    ],
    "衙門":           [
      [{"x": 226, "y": 287}, {"x": 372, "y": 354}, {"x": 548, "y": 248}, {"x": 587, "y": 259}],
      [{"x": 216, "y": 285}, {"x": 386, "y": 361}, {"x": 556, "y": 245}, {"x": 616, "y": 288}, {"x": 643, "y": 269}],
      [{"x": 240, "y": 297}, {"x": 380, "y": 355}, {"x": 616, "y": 208}],
      [{"x": 224, "y": 288}, {"x": 371, "y": 352}, {"x": 632, "y": 197}, {"x": 676, "y": 239}]
    ],
    "診所":           [
      [{"x": 235, "y": 278}, {"x": 323, "y": 233}, {"x": 254, "y": 209}, {"x": 360, "y": 154}, {"x": 434, "y": 194}, {"x": 595, "y": 109}, {"x": 632, "y": 123}],
      [{"x": 220, "y": 285}, {"x": 369, "y": 350}, {"x": 622, "y": 200}, {"x": 692, "y": 164}],
      [{"x": 212, "y": 285}, {"x": 318, "y": 229}, {"x": 264, "y": 195}, {"x": 364, "y": 149}, {"x": 456, "y": 185}, {"x": 624, "y": 89}, {"x": 679, "y": 113}],
      [{"x": 224, "y": 286}, {"x": 376, "y": 354}, {"x": 616, "y": 203}, {"x": 652, "y": 173}]
    ],
    "書院":           [
      [{"x": 227, "y": 287}, {"x": 320, "y": 222}, {"x": 269, "y": 201}, {"x": 351, "y": 154}, {"x": 428, "y": 184}, {"x": 492, "y": 145}, {"x": 468, "y": 125}, {"x": 392, "y": 124}],
      [{"x": 227, "y": 289}, {"x": 324, "y": 231}, {"x": 268, "y": 209}, {"x": 370, "y": 145}, {"x": 428, "y": 184}, {"x": 496, "y": 137}, {"x": 464, "y": 116}, {"x": 428, "y": 94}],
      [{"x": 227, "y": 288}, {"x": 329, "y": 229}, {"x": 272, "y": 209}, {"x": 368, "y": 150}, {"x": 440, "y": 185}, {"x": 500, "y": 142}, {"x": 468, "y": 122}, {"x": 461, "y": 78}],
      [{"x": 228, "y": 289}, {"x": 318, "y": 238}, {"x": 273, "y": 213}, {"x": 356, "y": 146}, {"x": 416, "y": 181}, {"x": 552, "y": 109}, {"x": 522, "y": 61}]
    ],
    "李清照家": [
      [{"x": 208, "y": 288}],
      [{"x": 144, "y": 285}],
      [{"x": 176, "y": 239}],
      [{"x": 232, "y": 255}]
    ]
  },
  "李清照家的庭院": {
    "河邊":           [
      [{"x": 163, "y": 236},{"x": 211, "y": 280}, {"x": 230, "y": 295}, {"x": 340, "y": 201}],
      [{"x": 163, "y": 236},{"x": 202, "y": 276}, {"x": 222, "y": 290}, {"x": 387, "y": 224}],
      [{"x": 163, "y": 236},{"x": 208, "y": 281}, {"x": 240, "y": 294}, {"x": 392, "y": 220}, {"x": 436, "y": 236}],
      [{"x": 163, "y": 236},{"x": 207, "y": 288}, {"x": 226, "y": 302}, {"x": 343, "y": 240}] 
    ],
    "酒館":           [
      [{"x": 163, "y": 236},{"x": 222, "y": 296}, {"x": 323, "y": 233}, {"x": 273, "y": 204}, {"x": 360, "y": 145}, {"x": 496, "y": 216}],
      [{"x": 163, "y": 236},{"x": 212, "y": 292}, {"x": 328, "y": 234}, {"x": 266, "y": 204}, {"x": 368, "y": 142}, {"x": 453, "y": 193}, {"x": 534, "y": 162}],
      [{"x": 163, "y": 236},{"x": 222, "y": 293}, {"x": 317, "y": 229}, {"x": 276, "y": 203}, {"x": 364, "y": 141}, {"x": 460, "y": 194}, {"x": 530, "y": 140}, {"x": 596, "y": 170}],
      [{"x": 163, "y": 236},{"x": 212, "y": 291}, {"x": 320, "y": 236}, {"x": 266, "y": 200}, {"x": 364, "y": 149}, {"x": 547, "y": 248}, {"x": 568, "y": 220}]

    ],
    "李清照家":       [
      [{"x": 135, "y": 241}, {"x": 208, "y": 288}],
      [{"x": 136, "y": 233}, {"x": 144, "y": 285}],
      [{"x": 140, "y": 237}, {"x": 176, "y": 239}],
      [{"x": 120, "y": 237}, {"x": 232, "y": 255}]
    ],
    "莊子家":         [
      [{"x": 163, "y": 236},{"x": 218, "y": 284}, {"x": 352, "y": 352}, {"x": 258, "y": 397}],
      [{"x": 163, "y": 236},{"x": 217, "y": 281}, {"x": 358, "y": 350}, {"x": 321, "y": 360}],
      [{"x": 163, "y": 236},{"x": 224, "y": 294}, {"x": 358, "y": 356}, {"x": 400, "y": 322}],
      [{"x": 163, "y": 236},{"x": 229, "y": 290}, {"x": 360, "y": 349}, {"x": 458, "y": 297}]
    ],
    "城門":           [
      [{"x": 163, "y": 236},{"x": 223, "y": 282}, {"x": 464, "y": 391}],
      [{"x": 163, "y": 236},{"x": 224, "y": 285}, {"x": 507, "y": 433}, {"x": 544, "y": 406}],
      [{"x": 163, "y": 236},{"x": 226, "y": 282}, {"x": 408, "y": 389}],
      [{"x": 163, "y": 236},{"x": 230, "y": 289}, {"x": 420, "y": 382}, {"x": 508, "y": 352}]
    ],
    "衙門":           [
      [{"x": 163, "y": 236},{"x": 226, "y": 287}, {"x": 372, "y": 354}, {"x": 548, "y": 248}, {"x": 587, "y": 259}],
      [{"x": 163, "y": 236},{"x": 216, "y": 285}, {"x": 386, "y": 361}, {"x": 556, "y": 245}, {"x": 616, "y": 288}, {"x": 643, "y": 269}],
      [{"x": 163, "y": 236},{"x": 240, "y": 297}, {"x": 380, "y": 355}, {"x": 616, "y": 208}],
      [{"x": 163, "y": 236},{"x": 224, "y": 288}, {"x": 371, "y": 352}, {"x": 632, "y": 197}, {"x": 676, "y": 239}]
    ],
    "診所":           [
      [{"x": 163, "y": 236},{"x": 235, "y": 278}, {"x": 323, "y": 233}, {"x": 254, "y": 209}, {"x": 360, "y": 154}, {"x": 434, "y": 194}, {"x": 595, "y": 109}, {"x": 632, "y": 123}],
      [{"x": 163, "y": 236},{"x": 220, "y": 285}, {"x": 369, "y": 350}, {"x": 622, "y": 200}, {"x": 692, "y": 164}],
      [{"x": 163, "y": 236},{"x": 212, "y": 285}, {"x": 318, "y": 229}, {"x": 264, "y": 195}, {"x": 364, "y": 149}, {"x": 456, "y": 185}, {"x": 624, "y": 89}, {"x": 679, "y": 113}],
      [{"x": 163, "y": 236},{"x": 224, "y": 286}, {"x": 376, "y": 354}, {"x": 616, "y": 203}, {"x": 652, "y": 173}]
    ],
    "書院":           [
      [{"x": 163, "y": 236},{"x": 227, "y": 287}, {"x": 320, "y": 222}, {"x": 269, "y": 201}, {"x": 351, "y": 154}, {"x": 428, "y": 184}, {"x": 492, "y": 145}, {"x": 468, "y": 125}, {"x": 392, "y": 124}],
      [{"x": 163, "y": 236},{"x": 227, "y": 289}, {"x": 324, "y": 231}, {"x": 268, "y": 209}, {"x": 370, "y": 145}, {"x": 428, "y": 184}, {"x": 496, "y": 137}, {"x": 464, "y": 116}, {"x": 428, "y": 94}],
      [{"x": 163, "y": 236},{"x": 227, "y": 288}, {"x": 329, "y": 229}, {"x": 272, "y": 209}, {"x": 368, "y": 150}, {"x": 440, "y": 185}, {"x": 500, "y": 142}, {"x": 468, "y": 122}, {"x": 461, "y": 78}],
      [{"x": 163, "y": 236},{"x": 228, "y": 289}, {"x": 318, "y": 238}, {"x": 273, "y": 213}, {"x": 356, "y": 146}, {"x": 416, "y": 181}, {"x": 552, "y": 109}, {"x": 522, "y": 61}]
    ],
    "李清照家的庭院": [
      [{"x": 73, "y": 250}],
      [{"x": 103, "y": 225}],
      [{"x": 138, "y": 198}],
      [{"x": 180, "y": 202}]
    ]
  },
  "莊子家": {
    "河邊":           [
  [{"x": 249, "y": 281}, {"x": 337, "y": 195}],
  [{"x": 255, "y": 295}, {"x": 391, "y": 219}],
  [{"x": 250, "y": 286}, {"x": 323, "y": 232}, {"x": 434, "y": 239}],
  [{"x": 253, "y": 291}, {"x": 346, "y": 239}]
  ],
    "酒館":           [
  [{"x": 249, "y": 288}, {"x": 300, "y": 186}, {"x": 369, "y": 147}, {"x": 495, "y": 209}],
  [{"x": 256, "y": 293}, {"x": 304, "y": 186}, {"x": 366, "y": 149}, {"x": 532, "y": 161}],
  [{"x": 374, "y": 358}, {"x": 621, "y": 194}, {"x": 596, "y": 168}],
  [{"x": 381, "y": 353}, {"x": 557, "y": 245}, {"x": 564, "y": 222}]
  ],
    "李清照家":       [
  [{"x": 200, "y": 286}],
  [{"x": 144, "y": 291}],
  [{"x": 173, "y": 240}],
  [{"x": 230, "y": 255}]
  ],
    "李清照家的庭院": [
  [{"x": 73, "y": 250}],
  [{"x": 103, "y": 225}],
  [{"x": 138, "y": 198}],
  [{"x": 180, "y": 202}]
  ],
    "城門":           [
  [{"x": 461, "y": 394}],
  [{"x": 461, "y": 393}, {"x": 541, "y": 407}],
  [{"x": 410, "y": 394}],
  [{"x": 505, "y": 351}]
  ],
    "衙門":           [
  [{"x": 495, "y": 280}, {"x": 561, "y": 241}, {"x": 587, "y": 261}],
  [{"x": 499, "y": 277}, {"x": 555, "y": 245}, {"x": 637, "y": 278}],
  [{"x": 501, "y": 277}, {"x": 633, "y": 204}],
  [{"x": 502, "y": 275}, {"x": 627, "y": 203}, {"x": 677, "y": 239}]
  ],
    "診所":           [
  [{"x": 500, "y": 278}, {"x": 630, "y": 185}, {"x": 592, "y": 142}, {"x": 627, "y": 127}],
  [{"x": 500, "y": 279}, {"x": 689, "y": 163}],
  [{"x": 500, "y": 279}, {"x": 641, "y": 182}, {"x": 599, "y": 143}, {"x": 652, "y": 103}, {"x": 684, "y": 118}],
  [{"x": 495, "y": 281}, {"x": 653, "y": 176}]
  ],
    "書院":           [
  [{"x": 248, "y": 287}, {"x": 315, "y": 176}, {"x": 394, "y": 118}],
  [{"x": 244, "y": 286}, {"x": 303, "y": 188}, {"x": 363, "y": 151}, {"x": 409, "y": 171}, {"x": 487, "y": 141}, {"x": 431, "y": 97}],
  [{"x": 247, "y": 287}, {"x": 305, "y": 186}, {"x": 363, "y": 149}, {"x": 419, "y": 167}, {"x": 489, "y": 135}, {"x": 462, "y": 82}],
  [{"x": 249, "y": 290}, {"x": 308, "y": 180}, {"x": 362, "y": 149}, {"x": 395, "y": 169}, {"x": 549, "y": 108}, {"x": 520, "y": 58}]
  ],
  "莊子家": [
    [{"x": 249, "y": 368}],
    [{"x": 307, "y": 339}],
    [{"x": 391, "y": 299}],
    [{"x": 441, "y": 283}]
  ]
  },
  "城門": {
    "河邊":           [
  [{"x": 379, "y": 357}, {"x": 259, "y": 277}, {"x": 336, "y": 190}],
  [{"x": 377, "y": 360}, {"x": 264, "y": 276}, {"x": 391, "y": 221}],
  [{"x": 375, "y": 357}, {"x": 296, "y": 310}, {"x": 431, "y": 244}],
  [{"x": 389, "y": 363}, {"x": 243, "y": 291}, {"x": 343, "y": 233}]
  ],
    "酒館":           [
  [{"x": 391, "y": 348}, {"x": 557, "y": 242}, {"x": 497, "y": 213}],
  [{"x": 386, "y": 354}, {"x": 557, "y": 247}, {"x": 467, "y": 202}, {"x": 528, "y": 161}],
  [{"x": 381, "y": 354}, {"x": 623, "y": 197}, {"x": 595, "y": 166}],
  [{"x": 379, "y": 362}, {"x": 565, "y": 224}]
  ],
    "李清照家":       [
  [{"x": 376, "y": 359}, {"x": 200, "y": 292}],
  [{"x": 378, "y": 356}, {"x": 145, "y": 292}],
  [{"x": 380, "y": 362}, {"x": 177, "y": 239}],
  [{"x": 399, "y": 367}, {"x": 226, "y": 254}]
  ],
    "李清照家的庭院": [
  [{"x": 391, "y": 363}, {"x": 135, "y": 234}, {"x": 72, "y": 245}],
  [{"x": 387, "y": 367}, {"x": 106, "y": 223}],
  [{"x": 381, "y": 363}, {"x": 194, "y": 272}, {"x": 140, "y": 193}],
  [{"x": 376, "y": 367}, {"x": 138, "y": 233}, {"x": 177, "y": 205}]
  ],
    "莊子家":         [
  [{"x": 249, "y": 368}],
  [{"x": 307, "y": 339}],
  [{"x": 388, "y": 356}, {"x": 391, "y": 299}],
  [{"x": 386, "y": 359}, {"x": 441, "y": 283}]
  ],
    "衙門":           [
  [{"x": 385, "y": 348}, {"x": 557, "y": 241}, {"x": 587, "y": 263}],
  [{"x": 373, "y": 353}, {"x": 559, "y": 240}, {"x": 638, "y": 272}],
  [{"x": 387, "y": 352}, {"x": 637, "y": 205}],
  [{"x": 382, "y": 350}, {"x": 611, "y": 208}, {"x": 673, "y": 236}]
  ],
    "診所":           [
  [{"x": 382, "y": 348}, {"x": 642, "y": 187}, {"x": 594, "y": 146}, {"x": 625, "y": 128}],
  [{"x": 380, "y": 350}, {"x": 694, "y": 159}],
  [{"x": 379, "y": 352}, {"x": 631, "y": 189}, {"x": 592, "y": 123}, {"x": 684, "y": 116}],
  [{"x": 381, "y": 349}, {"x": 655, "y": 170}]
  ],
    "書院":           [
  [{"x": 369, "y": 355}, {"x": 242, "y": 278}, {"x": 307, "y": 180}, {"x": 389, "y": 117}],
  [{"x": 375, "y": 360}, {"x": 251, "y": 249}, {"x": 356, "y": 142}, {"x": 406, "y": 172}, {"x": 489, "y": 140}, {"x": 428, "y": 96}],
  [{"x": 380, "y": 356}, {"x": 244, "y": 271}, {"x": 305, "y": 179}, {"x": 363, "y": 148}, {"x": 428, "y": 174}, {"x": 480, "y": 135}, {"x": 459, "y": 78}],
  [{"x": 377, "y": 355}, {"x": 634, "y": 186}, {"x": 520, "y": 57}]
  ],
  "城門": [
    [{"x": 465, "y": 392}],
    [{"x": 542, "y": 406}],
    [{"x": 408, "y": 392}],
    [{"x": 508, "y": 353}]
  ]
  },
  "衙門": {
    "河邊":           [
  [{"x": 553, "y": 244}, {"x": 357, "y": 152}, {"x": 298, "y": 183}, {"x": 338, "y": 190}],
  [{"x": 553, "y": 245}, {"x": 367, "y": 150}, {"x": 307, "y": 178}, {"x": 394, "y": 219}],
  [{"x": 546, "y": 243}, {"x": 362, "y": 148}, {"x": 308, "y": 178}, {"x": 431, "y": 238}],
  [{"x": 548, "y": 242}, {"x": 363, "y": 147}, {"x": 300, "y": 179}, {"x": 346, "y": 233}]
  ],
    "酒館":           [
  [{"x": 494, "y": 214}],
  [{"x": 635, "y": 187}, {"x": 574, "y": 142}, {"x": 528, "y": 161}],
  [{"x": 636, "y": 194}, {"x": 592, "y": 166}],
  [{"x": 563, "y": 216}]
  ],
    "李清照家":       [
  [{"x": 558, "y": 242}, {"x": 361, "y": 350}, {"x": 200, "y": 287}],
  [{"x": 558, "y": 241}, {"x": 359, "y": 352}, {"x": 146, "y": 286}],
  [{"x": 557, "y": 246}, {"x": 363, "y": 348}, {"x": 197, "y": 275}, {"x": 177, "y": 240}],
  [{"x": 564, "y": 242}, {"x": 352, "y": 349}, {"x": 227, "y": 252}]
  ],
    "李清照家的庭院": [
  [{"x": 563, "y": 244}, {"x": 350, "y": 346}, {"x": 195, "y": 274}, {"x": 73, "y": 248}],
  [{"x": 566, "y": 244}, {"x": 353, "y": 347}, {"x": 197, "y": 273}, {"x": 105, "y": 224}],
  [{"x": 575, "y": 238}, {"x": 348, "y": 347}, {"x": 194, "y": 277}, {"x": 137, "y": 195}],
  [{"x": 549, "y": 251}, {"x": 352, "y": 347}, {"x": 193, "y": 275}, {"x": 177, "y": 204}]
  ],
    "莊子家":         [
  [{"x": 546, "y": 251}, {"x": 261, "y": 394}, {"x": 254, "y": 372}],
  [{"x": 552, "y": 252}, {"x": 354, "y": 351}, {"x": 309, "y": 339}],
  [{"x": 552, "y": 251}, {"x": 399, "y": 330}, {"x": 391, "y": 303}],
  [{"x": 550, "y": 254}, {"x": 459, "y": 297}, {"x": 443, "y": 275}]
  ],
    "城門":           [
  [{"x": 554, "y": 251}, {"x": 385, "y": 352}, {"x": 465, "y": 392}],
  [{"x": 555, "y": 253}, {"x": 382, "y": 347}, {"x": 494, "y": 412}, {"x": 542, "y": 406}],
  [{"x": 552, "y": 250}, {"x": 385, "y": 352}, {"x": 408, "y": 392}],
  [{"x": 560, "y": 248}, {"x": 485, "y": 285}, {"x": 542, "y": 326}, {"x": 508, "y": 353}]
  ],
    "診所":           [
  [{"x": 631, "y": 184}, {"x": 600, "y": 150}, {"x": 628, "y": 129}],
  [{"x": 692, "y": 159}],
  [{"x": 632, "y": 182}, {"x": 596, "y": 145}, {"x": 650, "y": 105}, {"x": 686, "y": 116}],
  [{"x": 651, "y": 177}]
  ],
    "書院":           [
  [{"x": 636, "y": 188}, {"x": 476, "y": 129}, {"x": 388, "y": 115}],
  [{"x": 642, "y": 183}, {"x": 473, "y": 123}, {"x": 427, "y": 91}],
  [{"x": 642, "y": 189}, {"x": 457, "y": 117}, {"x": 462, "y": 80}],
  [{"x": 645, "y": 197}, {"x": 522, "y": 55}]
  ],
  "衙門": [
    [{"x": 585, "y": 260}],
    [{"x": 641, "y": 272}],
    [{"x": 634, "y": 211}],
    [{"x": 678, "y": 243}]
  ]
  },
  "診所": {
    "河邊":           [
  [{"x": 530, "y": 146}, {"x": 440, "y": 184}, {"x": 364, "y": 150}, {"x": 305, "y": 174}, {"x": 339, "y": 192}],
  [{"x": 532, "y": 144}, {"x": 424, "y": 189}, {"x": 362, "y": 147}, {"x": 304, "y": 178}, {"x": 395, "y": 216}],
  [{"x": 531, "y": 143}, {"x": 438, "y": 190}, {"x": 359, "y": 149}, {"x": 307, "y": 176}, {"x": 437, "y": 242}],
  [{"x": 524, "y": 144}, {"x": 450, "y": 193}, {"x": 364, "y": 152}, {"x": 299, "y": 180}, {"x": 345, "y": 233}]
  ],
    "酒館":           [
  [{"x": 574, "y": 153}, {"x": 497, "y": 211}],
  [{"x": 593, "y": 147}, {"x": 534, "y": 160}],
  [{"x": 593, "y": 163}],
  [{"x": 626, "y": 183}, {"x": 562, "y": 221}]
  ],
    "李清照家":       [
  [{"x": 560, "y": 153}, {"x": 355, "y": 155}, {"x": 278, "y": 195}, {"x": 199, "y": 287}],
  [{"x": 565, "y": 146}, {"x": 443, "y": 173}, {"x": 353, "y": 157}, {"x": 273, "y": 202}, {"x": 232, "y": 291}, {"x": 146, "y": 290}],
  [{"x": 580, "y": 143}, {"x": 436, "y": 182}, {"x": 360, "y": 153}, {"x": 301, "y": 183}, {"x": 210, "y": 277}, {"x": 177, "y": 237}],
  [{"x": 570, "y": 151}, {"x": 390, "y": 163}, {"x": 356, "y": 152}, {"x": 294, "y": 182}, {"x": 230, "y": 250}]
  ],
    "李清照家的庭院": [
  [{"x": 560, "y": 149}, {"x": 421, "y": 175}, {"x": 362, "y": 153}, {"x": 291, "y": 187}, {"x": 201, "y": 284}, {"x": 71, "y": 245}],
  [{"x": 595, "y": 153}, {"x": 353, "y": 157}, {"x": 293, "y": 184}, {"x": 200, "y": 283}, {"x": 107, "y": 219}],
  [{"x": 596, "y": 151}, {"x": 430, "y": 176}, {"x": 356, "y": 153}, {"x": 288, "y": 188}, {"x": 201, "y": 286}, {"x": 139, "y": 194}],
  [{"x": 594, "y": 152}, {"x": 429, "y": 169}, {"x": 362, "y": 151}, {"x": 303, "y": 177}, {"x": 197, "y": 286}, {"x": 180, "y": 203}]
  ],
    "莊子家":         [
  [{"x": 606, "y": 206}, {"x": 479, "y": 292}, {"x": 372, "y": 360}, {"x": 251, "y": 370}],
  [{"x": 616, "y": 207}, {"x": 376, "y": 345}, {"x": 306, "y": 341}],
  [{"x": 622, "y": 195}, {"x": 452, "y": 305}, {"x": 392, "y": 303}],
  [{"x": 617, "y": 197}, {"x": 475, "y": 289}, {"x": 440, "y": 277}]
  ],
    "城門":           [
  [{"x": 619, "y": 202}, {"x": 412, "y": 319}, {"x": 465, "y": 390}],
  [{"x": 621, "y": 197}, {"x": 400, "y": 335}, {"x": 461, "y": 392}, {"x": 543, "y": 403}],
  [{"x": 634, "y": 192}, {"x": 419, "y": 314}, {"x": 405, "y": 393}],
  [{"x": 629, "y": 190}, {"x": 488, "y": 283}, {"x": 523, "y": 321}, {"x": 512, "y": 350}]
  ],
    "衙門":           [
  [{"x": 585, "y": 260}],
  [{"x": 695, "y": 237}, {"x": 641, "y": 272}],
  [{"x": 634, "y": 211}],
  [{"x": 678, "y": 243}]
  ],
    "書院":           [
  [{"x": 579, "y": 148}, {"x": 463, "y": 122}, {"x": 389, "y": 113}],
  [{"x": 594, "y": 156}, {"x": 462, "y": 122}, {"x": 424, "y": 96}],
  [{"x": 599, "y": 158}, {"x": 463, "y": 121}, {"x": 462, "y": 70}],
  [{"x": 519, "y": 54}]
  ],
  "診所": [
    [{"x": 630, "y": 127}],
    [{"x": 691, "y": 162}],
    [{"x": 684, "y": 120}],
    [{"x": 648, "y": 175}]
  ]
  },
  "書院": {
    "河邊":           [
  [{"x": 496, "y": 139}, {"x": 409, "y": 174}, {"x": 357, "y": 147}, {"x": 308, "y": 177}, {"x": 338, "y": 197}],
  [{"x": 501, "y": 142}, {"x": 403, "y": 183}, {"x": 357, "y": 152}, {"x": 303, "y": 178}, {"x": 393, "y": 218}],
  [{"x": 505, "y": 146}, {"x": 409, "y": 181}, {"x": 362, "y": 147}, {"x": 302, "y": 182}, {"x": 431, "y": 240}],
  [{"x": 494, "y": 151}, {"x": 419, "y": 180}, {"x": 360, "y": 155}, {"x": 302, "y": 183}, {"x": 347, "y": 235}]
  ],
    "酒館":           [
  [{"x": 503, "y": 144}, {"x": 494, "y": 211}],
  [{"x": 528, "y": 165}],
  [{"x": 591, "y": 168}],
  [{"x": 560, "y": 140}, {"x": 634, "y": 186}, {"x": 565, "y": 222}]
  ],
    "李清照家":       [
  [{"x": 501, "y": 149}, {"x": 415, "y": 178}, {"x": 361, "y": 155}, {"x": 301, "y": 180}, {"x": 269, "y": 265}, {"x": 198, "y": 285}],
  [{"x": 506, "y": 150}, {"x": 420, "y": 184}, {"x": 363, "y": 149}, {"x": 301, "y": 182}, {"x": 223, "y": 285}, {"x": 146, "y": 283}],
  [{"x": 501, "y": 148}, {"x": 424, "y": 183}, {"x": 358, "y": 153}, {"x": 286, "y": 191}, {"x": 201, "y": 285}, {"x": 173, "y": 234}],
  [{"x": 499, "y": 150}, {"x": 419, "y": 181}, {"x": 368, "y": 154}, {"x": 304, "y": 181}, {"x": 226, "y": 254}]
  ],
    "李清照家的庭院": [
  [{"x": 496, "y": 146}, {"x": 404, "y": 184}, {"x": 358, "y": 149}, {"x": 304, "y": 181}, {"x": 255, "y": 268}, {"x": 196, "y": 274}, {"x": 77, "y": 247}],
  [{"x": 506, "y": 140}, {"x": 411, "y": 177}, {"x": 365, "y": 149}, {"x": 297, "y": 184}, {"x": 264, "y": 269}, {"x": 196, "y": 277}, {"x": 108, "y": 224}],
  [{"x": 510, "y": 147}, {"x": 415, "y": 176}, {"x": 366, "y": 145}, {"x": 304, "y": 172}, {"x": 260, "y": 271}, {"x": 193, "y": 271}, {"x": 143, "y": 194}],
  [{"x": 511, "y": 143}, {"x": 427, "y": 181}, {"x": 357, "y": 150}, {"x": 305, "y": 178}, {"x": 243, "y": 286}, {"x": 195, "y": 272}, {"x": 177, "y": 203}]
  ],
    "莊子家":         [
  [{"x": 514, "y": 139}, {"x": 638, "y": 181}, {"x": 553, "y": 248}, {"x": 484, "y": 289}, {"x": 245, "y": 373}],
  [{"x": 555, "y": 132}, {"x": 646, "y": 192}, {"x": 379, "y": 338}, {"x": 311, "y": 337}],
  [{"x": 566, "y": 134}, {"x": 634, "y": 189}, {"x": 411, "y": 322}, {"x": 386, "y": 303}],
  [{"x": 551, "y": 135}, {"x": 633, "y": 192}, {"x": 474, "y": 287}, {"x": 442, "y": 276}]
  ],
    "城門":           [
  [{"x": 572, "y": 143}, {"x": 642, "y": 193}, {"x": 385, "y": 333}, {"x": 460, "y": 391}],
  [{"x": 561, "y": 135}, {"x": 643, "y": 192}, {"x": 413, "y": 321}, {"x": 464, "y": 390}, {"x": 544, "y": 407}],
  [{"x": 564, "y": 136}, {"x": 651, "y": 193}, {"x": 393, "y": 330}, {"x": 408, "y": 396}],
  [{"x": 564, "y": 135}, {"x": 634, "y": 194}, {"x": 497, "y": 276}, {"x": 525, "y": 329}, {"x": 512, "y": 352}]
  ],
    "衙門":           [
  [{"x": 595, "y": 149}, {"x": 644, "y": 191}, {"x": 569, "y": 230}, {"x": 585, "y": 257}],
  [{"x": 560, "y": 136}, {"x": 700, "y": 230}, {"x": 637, "y": 273}],
  [{"x": 556, "y": 132}, {"x": 637, "y": 207}],
  [{"x": 560, "y": 133}, {"x": 681, "y": 243}]
  ],
    "診所":           [
  [{"x": 630, "y": 127}],
  [{"x": 570, "y": 152}, {"x": 655, "y": 197}, {"x": 691, "y": 162}],
  [{"x": 684, "y": 120}],
  [{"x": 549, "y": 133}, {"x": 648, "y": 175}]
  ],
  "書院": [
    [{"x": 389, "y": 117}],
    [{"x": 428, "y": 96}],
    [{"x": 459, "y": 78}],
    [{"x": 520, "y": 57}]
  ]
  },
};

const poem_png = {
  "李白": "assets/images/a.jpg",
  "李清照": "assets/images/b.jpg",
  "李老師": "assets/images/c.jpg",
  "莊子": "assets/images/d.jpg",
  // … 其他
};


const GAME_SPEED = 3000;
const BACKEND_API_URL = 'http://localhost:8000/api/status';
const POEM_API_URL = 'http://localhost:8000/api/check_poem';

const TARGET_AGENT_ID = 'li_xiucai';
const TARGET_LOCATION_NAME = '書院';

// =====================================================================================
// == 重要：請在此處設定您的音訊檔案路徑                                                ==
// == 如果您之前可以播放，請確保這裡的路徑與您【之前能正常播放時】的路徑【完全一致】。 ==
// == 例如：const PRESET_AUDIO_URL = 'my_sound.wav'; (如果檔案在同目錄下)              ==
// == 或：  const PRESET_AUDIO_URL = 'sounds/my_sound.mp3'; (如果在 sounds 子目錄)      ==
// =====================================================================================
const PRESET_AUDIO_URL = 'data_example.wav'; // <-- 請務必檢查並修改此處為您【之前能播放】的音訊檔案路徑！
// =====================================================================================

console.log("[音訊偵錯日誌] PRESET_AUDIO_URL 在腳本載入時的初始值:", PRESET_AUDIO_URL);

const PRESET_AUDIO_NAME = '抵達提示音';
let locationEventTriggeredThisCycle = false;

const timeUnits = ["初刻", "一刻", "二刻", "三刻", "正"];
const shichen = ["子", "丑", "寅", "卯", "辰", "巳", "午", "未", "申", "酉", "戌", "亥"];
let currentShichenIndex = 3;
let currentTimeUnitIndex = 0;
let gameIntervalId = null;
let isPlaying = false;

const gameTimeDisplay = document.getElementById('game-time-display');
const playPauseButton = document.getElementById('play-pause-button');
const nextStepButton = document.getElementById('next-step-button');
const cityMapContainer = document.getElementById('city-map-container');
const infoPanelContainer = document.getElementById('info-panel-container');

const poemDisplay = document.getElementById('poem-display');
const poemLoadingMessage = document.getElementById('poem-loading-message');

const agentElements = {};
const agentSpeechBubbles = {};
const agentInfoPanels = {};
const locationCoordinates = {};

const eventAudioPlayer = document.getElementById('eventAudioPlayer');
const locationEventModal = document.getElementById('locationEventModal');
const closeEventModalButton = document.getElementById('closeEventModalButton');
const eventModalTitle = document.getElementById('eventModalTitle');
const eventModalMessage = document.getElementById('eventModalMessage');
const eventModalPlayPauseButton = document.getElementById('eventModalPlayPauseButton');
const eventModalMessageBox = document.getElementById('eventModalMessageBox');

const routeSelectOrder = {
  '李白': 0, 
  '李清照': 1,
  '李老師': 2,
  '莊子': 3
}

const role_png = { // 角色圖片路徑
    "test1": "assets\\images\\test1.png",
    "test2": "assets\\images\\test2.png",
    "李白": "assets\\images\\李白.png",
    "莊子": "assets\\images\\莊子.png",
    "李清照": "assets\\images\\李清照.png",
    "李老師": "assets\\images\\李老師.png",
};

// 計算並儲存每個location的座標到locationCoordinates物件
document.querySelectorAll('#city-map-container .location').forEach(locEl => {
    const locationName = locEl.dataset.locationName;
    if (locationName) {
        const mapRect = cityMapContainer.getBoundingClientRect();
        const locRect = locEl.getBoundingClientRect();
        locationCoordinates[locationName] = {
            x: (locRect.left - mapRect.left) + locEl.offsetWidth / 2,
            y: (locRect.top - mapRect.top) + locEl.offsetHeight / 2,
            name: locationName
        };
    }
});

/**
 * 建立一個新的 <img> 元素並插入指定容器
 * @param {string} name               - agent_id，用於設定 data-name 屬性
 * @param {HTMLElement} container     - 要插入的父容器元素
 * @param {number} [x=0]          - 初始 X 座標 (px)
 * @param {number} [y=0]          - 初始 Y 座標 (px)
 * @returns {HTMLImageElement}        - 新建立並已插入容器的 <img> 元素
 */
function createRoleImage(name, container, x = 0, y = 0) {
    const img = document.createElement('img');
    const path = role_png[name];

    img.dataset.name   = name;
    img.src            = path;
    // 絕對定位，以便指定位置
    img.style.position = 'absolute';

    // x_bias = img.width;
    // y_bias = img.height;
    // // 修正圖片1/2長寬
    // x -= x_bias;
    // y -= y_bias;
    // const x_bias = img.width  / 2;
    // const y_bias = img.height / 2;
    img.style.left     = `${x}px`;
    img.style.top      = `${y}px`;
    // img.addEventListener('load', () => {
    //   const x_bias = img.width  / 2;
    //   const y_bias = img.height / 2;
    //   console.log(name, 'before', img.style.left, img.style.top)
    //   img.style.left = `${x - x_bias}px`;
    //   img.style.top  = `${y - y_bias}px`;
    //   console.log(name, x_bias, y_bias)
      
    //   console.log(name, 'after', img.style.left, img.style.top)
    // }, { once: true });

    // 插入到父容器
    container.appendChild(img);
    return img;
  }

/**
 * 以人物id建立(如果不存在)並獲取 <img>，並用非同步動畫移動到指定x, y座標
 * @param {string} name      - agent_id
 * @param {number} x         - 目標 x 座標 (px)
 * @param {number} y         - 目標 y 座標 (px)
 * @param {number} [speed]   - 動畫速度 (像素/毫秒)，預設值 0.5 px/ms
 * @returns {Animation}      - Web Animations API 的 Animation 物件，可做後續暫停等操作
 */
function move2xy(name, x, y, speed = 0.5) {
    // 預設把圖片放在 id="city-map-container" 的 DIV 內
    const container = document.getElementById('city-map-container');
  
    // 取人物圖片路徑
    const path = role_png[name];
    if (!path) {
      console.warn(`找不到名稱為 "${name}" 的圖片路徑`);
      return;
    }
  
    // 嘗試在 container 裡找已有的 <img data-name="...">
    let img = container.querySelector(`img[data-name="${name}"]`);
    // 若不存在就建立一個新的
    if (!img) {
        img = createRoleImage(name, container, x, y);
    }

    // x_bias = img.width / 2;
    // y_bias = img.height / 2;
    // // 修正圖片1/2長寬
    // x -= x_bias;
    // y -= y_bias;

    // 讀取目前座標
    const style  = getComputedStyle(img);
    let startX = parseFloat(style.left) || 0;
    let startY = parseFloat(style.top)  || 0;
  
    // 利用距離計算移動時間
    const dx       = x - startX;
    const dy       = y - startY;
    const distance = Math.hypot(dx, dy);
    const duration = distance / speed; 
  
    // 設定移動動畫，並且使用非同步在背景執行，持續時間為 duration 毫秒
    const animation = img.animate(
      [
        { left: `${startX}px`, top: `${startY}px` },
        { left: `${x}px`,      top: `${y}px`      }
      ],
      {
        duration,
        easing: 'linear',
        fill: 'forwards'
      }
    );
  
    return animation;
  }


/**
 * 非同步讓角色沿著一系列xy座標依序移動
 * @param {string} name              - agent_id
 * @param {{x: number, y: number}[]} path    - 座標陣列
 * @param {number} [speed=0.5]       - 動畫速度 (px/ms)，預設值 0.5 px/ms
 */
function move2xyWithRoute(name, path, speed = 0.5) {
    let index = 0;
  
    function step() {
      if (index >= path.length) return;  // 全部座標都跑完就結束
  
      const { x, y } = path[index++]; // 取出要前往的座標
      const animation = move2xy(name, x, y, speed); // 非同步移動
      if (!animation) return; // 找不到角色就直接結束
  
      // 抵達座標後再呼叫移動到下一個座標
      animation.onfinish = step;
    }
  
    // 開始移動到第一個座標
    step();
  }

/**
 * 隨機從 routeTable[a][b] 選一條尚未使用的路徑，並呼叫 move2xyWithRoute
 * @param {string} agentId    - 角色 ID
 * @param {string} from       - 起點名稱 (e.g. "河邊")
 * @param {string} to         - 終點名稱 (e.g. "書院")
 */
function moveWithLocation(agentId, from, to) {
  const routes = routeTable[from]?.[to] || [];
  if (routes.length === 0) {
    console.warn(`沒有可用的路徑：${from} → ${to}`);
    return;
  }

  const key = `${from}→${to}`;

  // 直接從 routeSelectOrder 拿 index，不做任何驗證
  const chosenIdx = routeSelectOrder[agentId];

  // 取出路徑並執行移動
  const path = routes[chosenIdx];
  move2xyWithRoute(agentId, path, 0.1);
}

/**
 * 重設所有已用過路徑的記錄
 * 或傳入特定 from/to 只重設那組路徑
 * @param {string} [from]  - （可選）起點
 * @param {string} [to]    - （可選）終點
 */
function resetUsedRoutes(from, to) {
  if (from && to) {
    const key = `${from}→${to}`;
    delete usedRoutes[key];
  } else {
    usedRoutes = {};
  }
}


/**
 * 向後端 /api/status 發送 GET 請求
 * @param {string} time - 查詢參數 time，例如 '2025-05-20T21:00:00'
 * @param {string} name - 查詢參數 name，例如 'Alice'
 * @returns {Promise<Object>} - 後端回傳的 JSON 物件
 */
async function fetchStatus(time, name) {
  // 1. 序列化 query string
  const params = new URLSearchParams({ time, name });

  // 2. 用完整網址呼叫
  const url = `${BACKEND_API_URL}?${params.toString()}`;

  // 3. 發送 GET 請求
  const response = await fetch(url, {
    method: 'GET',
    headers: {
      'Accept': 'application/json'
    }
  });

  if (!response.ok) {
    throw new Error(`後端回應錯誤：${response.status} ${response.statusText}`);
  }

  // 4. 解析並回傳 JSON
  return await response.json();
}

// 在正方形區塊顯示狀態資訊
function displayStatus(area, name, activity, think, loc) {
  const box = document.getElementById(`status-${area}`);
  if (!box) {
      console.warn(`找不到區塊 status-${area}`);
      return;
  }
  box.innerHTML = `
      <strong>${name}</strong><br>
      🏃 活動：${activity}<br>
      💭 思考：${think}<br>
      📍 位置：${loc}
  `;
}

// 範例：呼叫時就會確實打到 http://localhost:8000/api/status

// fetchStatus('00:15', '李白')
//   .then(data => {
//     console.log('後端回傳資料：', data);
//     // 這裡可以做進一步處理或更新畫面
//   })
//   .catch(err => {
//     console.error('API 請求失敗：', err);
//   });

// 假設我們用一個物件來記錄每個角色的目前位置
const currentPositions = {};

/**
 * 更新角色狀態並觸發移動與顯示
 * @param {string} name - 角色名稱，例如 '李白'
 * @param {string} time - 時間字串，例如 '2025-05-20T21:00:00'
 */
async function updateCharacterStatus(name, time) {
  try {
    // 1. 拿到後端回傳的狀態
    const { time: t, activity, think, location: newLocation } = await fetchStatus(time, name);

    // 2. 讀取並儲存之前的位置，若沒紀錄則預設從 newLocation 自身開始
    const prevLocation = currentPositions[name] || newLocation;
    console.log(prevLocation, newLocation);
   // 3. 如果位置變了，才觸發隨機路徑移動
    moveWithLocation(name, prevLocation, newLocation);

    // 4. 更新目前位置
    currentPositions[name] = newLocation;

    // 5. 顯示角色狀態
    displayStatus(name, name, activity, think, newLocation);

  } catch (err) {
    console.error(`更新角色狀態失敗：${err.message}`, err);
  }
}


// 範例呼叫
// updateCharacterStatus('李白', '2025-05-20T21:00:00');

// 1. 產生從 00:00 到 23:45，每 15 分鐘一格的時間陣列
const timeSlots = Array.from(
  { length: 24 * 4 },
  (_, i) => {
    const h = String(Math.floor(i / 4)).padStart(2, '0');
    const m = String((i % 4) * 15).padStart(2, '0');
    return `${h}:${m}`;
  }
);

// 2. 記錄目前的時間索引（初始為 0，也就是 "00:00"）
let currentIndex = 0;

// 3. 每次呼叫的更新函式
function goToNextTime() {
  // 如果已經超過最後一個，就維持在最後
  if (currentIndex < timeSlots.length - 1) {
    currentIndex++;
  }
  const nextTime = timeSlots[currentIndex];
  // 真正的角色狀態更新呼叫
  updateCharacterStatus('李白', nextTime);
  updateCharacterStatus('李清照', nextTime);
  updateCharacterStatus('李老師', nextTime);
  updateCharacterStatus('莊子', nextTime);

  fetchPoem('李白', nextTime);
  fetchPoem('李清照', nextTime);
  fetchPoem('李老師', nextTime);
  fetchPoem('莊子', nextTime);
  // 同步更新畫面上的時間顯示（可選）
  document.getElementById('game-time-display').textContent = `時間: ${nextTime}`;
}


function goToPrevTime() {
  if (currentIndex > 0) {
    currentIndex--;
    const prevTime = timeSlots[currentIndex];
    // 更新所有角色
    updateCharacterStatus('李白', prevTime);
    updateCharacterStatus('李清照', prevTime);
    updateCharacterStatus('李老師', prevTime);
    updateCharacterStatus('莊子', prevTime);
    // 更新畫面上的時間顯示
    gameTimeDisplay.textContent = `時間: ${prevTime}`;
  }
}

let autoInterval = null;

document.addEventListener('DOMContentLoaded', () => {
  const playBtn = document.getElementById('play-pause-button');
  const nextBtn = document.getElementById('next-step-button');
  const prevBtn = document.getElementById('prev-step-button');

  // 播放 / 暫停 按鈕
  playBtn.addEventListener('click', () => {
    if (autoInterval) {
      clearInterval(autoInterval);
      autoInterval = null;
      playBtn.textContent = '播放';
    } else {
      goToNextTime();
      autoInterval = setInterval(goToNextTime, 5000);
      playBtn.textContent = '暫停';
    }
  });

  // 下一步
  nextBtn.addEventListener('click', () => {
    if (autoInterval) {
      clearInterval(autoInterval);
      autoInterval = null;
      playBtn.textContent = '播放';
    }
    goToNextTime();
  });

  // 上一步
  prevBtn.addEventListener('click', () => {
    if (autoInterval) {
      clearInterval(autoInterval);
      autoInterval = null;
      playBtn.textContent = '播放';
    }
    goToPrevTime();
  });

  // 一進來先顯示一次時間
  updateCharacterStatus('李白', timeSlots[currentIndex]);
  gameTimeDisplay.textContent = `時間: ${timeSlots[currentIndex]}`;
});


//   const container = document.getElementById('city-map-container');
//   const svgNS     = 'http://www.w3.org/2000/svg';

//   // 1. 建立、對齊 overlay
//   const rect = container.getBoundingClientRect();
//   const overlay = document.createElementNS(svgNS, 'svg');
//   overlay.id = 'draw-overlay';
//   overlay.setAttribute('viewBox', `0 0 ${rect.width} ${rect.height}`);
//   overlay.setAttribute('width',  rect.width);
//   overlay.setAttribute('height', rect.height);
//   overlay.style.position = 'absolute';
//   overlay.style.top      = '0';
//   overlay.style.left     = '0';
//   container.appendChild(overlay);

//   // 2. 建 polyline
//   const polyline = document.createElementNS(svgNS, 'polyline');
//   polyline.setAttribute('fill',         'none');
//   polyline.setAttribute('stroke',       '#f00');
//   polyline.setAttribute('stroke-width', '2');
//   overlay.appendChild(polyline);

//   // 3. 點擊收點、更新 polyline
//   const points = [];
//   container.addEventListener('click', e => {
//     const r = container.getBoundingClientRect();
//     const x = e.clientX - r.left;
//     const y = e.clientY - r.top;
//     points.push({ x: Math.round(x), y: Math.round(y) });
//     polyline.setAttribute(
//       'points',
//       points.map(p => `${p.x},${p.y}`).join(' ')
//     );
//   });

// // 4. 匯出成 "{x, y}, {x, y}, ..." 不換行
// document.getElementById('export-coords')
//   .addEventListener('click', () => {
//     const coordsString = points
//       .map(p => `{"x": ${p.x}, "y": ${p.y}}`)
//       .join(', ');
//     document.getElementById('coords-output').textContent = coordsString;
//   });

//   // 5. 重設路徑按鈕
// document.getElementById('reset-path')
// .addEventListener('click', () => {
//   // 清空資料陣列
//   points.length = 0;
//   // 清掉 polyline
//   polyline.setAttribute('points', '');
//   // 清空輸出區
//   document.getElementById('coords-output').textContent = '';
// });

// 吟詩模組：未包含背景圖片，僅有顯示詩詞、播放音檔
(function(){
  // ==== 注入樣式 ====
  const css = `
  /* 全域唯一前綴：poem-modal- */
  .poem-modal-overlay {
    position: fixed;
    top: 0; left: 0;
    width: 100%; height: 100%;
    background: rgba(0,0,0,0.6);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 9999;
  }
  .poem-modal-content {
    background: #fffaf0;
    border: 2px solid #deb887;
    border-radius: 1rem;
    box-shadow: 0 10px 25px rgba(0,0,0,0.2);
    max-width: 600px;
    width: 90%;
    padding: 2rem;
    position: relative;
    text-align: center;
    font-family: 'Noto Serif TC', serif;
  }
  .poem-modal-close {
    position: absolute;
    top: 0.5rem; right: 0.8rem;
    background: none;
    border: none;
    font-size: 2rem;
    color: #a9a9a9;
    cursor: pointer;
  }
  .poem-modal-close:hover { color: #778899; }
  .poem-modal-title { font-size: 1.75rem; color: #8b4513; margin-bottom: 1rem; }
  .poem-modal-text {
    font-size: 1.15em;
    line-height: 1.9;
    white-space: pre-wrap;
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.8s ease-out, transform 0.8s ease-out;
    margin: 1rem 0;
    background: rgba(245,245,220,0.8);
    border: 1px dashed #d2b48c;
    border-radius: 0.5rem;
    padding: 1rem;
    max-height: 60vh;
    overflow-y: auto;
  }
  .poem-modal-text.visible {
    opacity: 1;
    transform: translateY(0);
  }
  .poem-modal-controls { margin-top: 1rem; }
  .poem-modal-controls button {
    background: #8fbc8f;
    color: #fff;
    border: none;
    border-radius: 0.5rem;
    padding: 0.6rem 1.2rem;
    font-size: 1rem;
    cursor: pointer;
    transition: background 0.3s;
  }
  .poem-modal-controls button:hover { background: #3cb371; }
  .poem-modal-controls button:disabled { background: #98fb98; cursor: not-allowed; }
  .poem-modal-status {
    margin-top: 1rem;
    padding: 0.75rem;
    border-radius: 0.375rem;
    display: none;
    font-size: 0.9rem;
  }
  .poem-modal-status.info { background: #e0ffff; color: #008080; border:1px solid #afeeee; }
  .poem-modal-status.warning { background: #fffacd; color: #b8860b; border:1px solid #fff0b3; }
  .poem-modal-status.error { background: #ffcccb; color: #c00; border:1px solid #ffb3b3; }
  `;
  const style = document.createElement('style');
  style.setAttribute('type', 'text/css');
  style.textContent = css;
  document.head.appendChild(style);

  /**
 * 在頁面上彈出一個詩詞吟誦視窗，並同步播放音訊
 * @param {string} poemText - 詩詞文字，保留換行與格式
 * @param {string} audioPath - 音訊檔案路徑
 */
  // ==== 主函式，不含重購功能 ====
  function showPoemAudioModal(poemText, audioPath) {
    
    
    const mainPlayBtn = document.getElementById('play-pause-button');
    if (mainPlayBtn && mainPlayBtn.textContent === '暫停') {
      console.log('[自動暫停] 在顯示詩詞前，先自動暫停主畫面播放。');
      mainPlayBtn.click();
    }
    
    // 檢查或生成 DOM 結構
    let overlay = document.querySelector('.poem-modal-overlay');
    if (!overlay) {
      overlay = document.createElement('div');
      overlay.className = 'poem-modal-overlay';
      overlay.innerHTML = `
        <div class="poem-modal-content">
          <button class="poem-modal-close" aria-label="關閉">&times;</button>
          <div class="poem-modal-title">詩詞吟誦</div>
          <div class="poem-modal-status info"></div>
          <div class="poem-modal-text"></div>
          <div class="poem-modal-controls">
            <button class="poem-modal-play">播放吟誦</button>
          </div>
          <audio class="poem-modal-audio" style="display:none;"></audio>
        </div>`;
      document.body.appendChild(overlay);

      // 綁定關閉按鈕
      overlay.querySelector('.poem-modal-close').addEventListener('click', () => {
        overlay.style.display = 'none';
        const audio = overlay.querySelector('.poem-modal-audio');
        audio.pause(); audio.currentTime = 0;
        overlay.querySelector('.poem-modal-text').classList.remove('visible');
        const btn = overlay.querySelector('.poem-modal-play');
        btn.textContent = '播放吟誦'; btn.disabled = false;
        overlay.querySelector('.poem-modal-status').style.display = 'none';
      });
    }

    const statusEl = overlay.querySelector('.poem-modal-status');
    const textEl   = overlay.querySelector('.poem-modal-text');
    const playBtn  = overlay.querySelector('.poem-modal-play');
    const audioEl  = overlay.querySelector('.poem-modal-audio');

    // 顯示文字與狀態
    textEl.textContent = poemText.trim();
    textEl.classList.remove('visible');
    statusEl.style.display = 'none';

    // 設音訊源
    audioEl.src = audioPath;
    audioEl.load();
    playBtn.disabled = true;
    playBtn.textContent = '準備吟誦';

    // 顯示 overlay
    overlay.style.display = 'flex';

    // play 事件一次性監聽
    const onPlayOnce = () => {
      textEl.classList.add('visible');
      playBtn.textContent = '暫停吟誦';
      playBtn.disabled = false;
      statusEl.className = 'poem-modal-status info';
      statusEl.textContent = '正在吟誦…';
      statusEl.style.display = 'block';
      audioEl.removeEventListener('play', onPlayOnce);
    };
    audioEl.addEventListener('play', onPlayOnce);

    // 嘗試自動播放
    audioEl.play().catch(err => {
      statusEl.className = 'poem-modal-status warning';
      statusEl.textContent = '自動播放被阻擋，請手動點擊播放。';
      statusEl.style.display = 'block';
      playBtn.textContent = '播放吟誦';
      playBtn.disabled = false;
      audioEl.removeEventListener('play', onPlayOnce);
    });

    // 播放/暫停切換
    playBtn.onclick = () => {
      if (audioEl.paused || audioEl.ended) {
        if (audioEl.ended) audioEl.currentTime = 0;
        textEl.classList.add('visible');
        audioEl.play().catch(e => {
          statusEl.className = 'poem-modal-status error';
          statusEl.textContent = `播放失敗：${e.message}`;
          statusEl.style.display = 'block';
        });
      } else {
        audioEl.pause();
      }
    };

    // 監聽 pause / ended / error
    audioEl.onpause = () => {
      playBtn.textContent = '播放吟誦';
      statusEl.className = 'poem-modal-status info';
      statusEl.textContent = '吟誦已暫停。';
      statusEl.style.display = 'block';
    };
    audioEl.onended = () => {
      playBtn.textContent = '重新吟誦';
      statusEl.className = 'poem-modal-status info';
      statusEl.textContent = '吟誦完畢。';
      statusEl.style.display = 'block';
    };
    audioEl.onerror = () => {
      statusEl.className = 'poem-modal-status error';
      statusEl.textContent = '音訊播放發生錯誤。';
      statusEl.style.display = 'block';
      playBtn.textContent = '播放吟誦';
      playBtn.disabled = false;
    };
  }

  // 將函式暴露到全域，任何模組可以透過`showPoemAudioModal`來使用
  window.showPoemAudioModal = showPoemAudioModal;
})();

// 記錄已顯示過詩詞視窗的角色
const shownPoemAgents = new Set();

/**
 * 向後端 /api/check_poem 發送 GET 請求，並根據回傳決定是否顯示吟詩視窗
 * 每個角色只會觸發一次 showPoemAudioModal
 * @param {string} name - 角色名稱
 * @param {string} time - 時間字串，例如 '00:15'
 * @returns {Promise<Object|null>} - 後端回傳的資料或 null
 */
async function fetchPoem(name, time) {
  try {
    // 如果已經顯示過詩詞，就直接跳過
    if (shownPoemAgents.has(name)) return null;

    // 構建 query string
    const params = new URLSearchParams({ time, name });
    const url = `${POEM_API_URL}?${params.toString()}`;

    // 發送 GET 請求
    const response = await fetch(url, {
      method: 'GET',
      headers: { 'Accept': 'application/json' }
    });

    // 錯誤處理
    if (!response.ok) {
      console.error(`詩詞 API 回應錯誤：${response.status} ${response.statusText}`);
      return null;
    }

    // 解析 JSON
    const data = await response.json();
    console.log('fetchPoem 回傳資料：', data);

    // 判斷是否需要顯示吟詩視窗
    const shouldShowPoem = data.time_ === true || data[time] === true;
    if (shouldShowPoem) {
      // 標記此角色已顯示過
      shownPoemAgents.add(name);
      console.log('觸發吟誦視窗條件成立，顯示詩詞吟誦');

      // 轉換後端的 sound 為正確檔名，去除冒號並加上 .mp3
      const soundFileKey = data.sound.replace(/:/g, '');
      const soundUrl = `assets/audio/${soundFileKey}.mp3`;
      showPoemAudioModal(data.poem, soundUrl);
    }

    return data;
  } catch (err) {
    console.error('fetchPoem 發生錯誤：', err);
    return null;
  }
}


// 範例用法
// fetchPoem('李白', '00:00')
//   .then(poemData => {
//     if (poemData) {
//       // 這裡可以進一步把詩詞顯示到畫面上
//       console.log(poemData);
//     }
//   });

// city-map-container座標：
// x: 160.40000915527344, y: 51.60000228881836

// function getCurrentGameTimeString() {
//     return `${shichen[currentShichenIndex]}${timeUnits[currentTimeUnitIndex]}`;
// }

// function advanceGameTime() {
//     currentTimeUnitIndex++;
//     if (currentTimeUnitIndex >= timeUnits.length) {
//         currentTimeUnitIndex = 0;
//         currentShichenIndex++;
//         if (currentShichenIndex >= shichen.length) {
//             currentShichenIndex = 0;
//         }
//     }
//     return getCurrentGameTimeString();
// }

// async function fetchAndUpdateGameState() {
//     const currentGameTime = getCurrentGameTimeString();
//     gameTimeDisplay.textContent = `時間: ${currentGameTime}`;
//     const requestUrl = `${BACKEND_API_URL}?time=${encodeURIComponent(currentGameTime)}`;
//     try {
//         const response = await fetch(requestUrl);
//         if (!response.ok) {
//             throw new Error(`遊戲狀態 API 請求失敗: ${response.status} ${response.statusText}`);
//         }
//         const gameState = await response.json();
//         if (gameState.agents) {
//             updateAgents(gameState.agents);
//         } else {
//             console.warn("警告：收到的遊戲狀態中沒有代理人資料。");
//         }
//     } catch (error) {
//         console.error("偵錯[JS-API]: 獲取遊戲狀態失敗:", error);
//         if (isPlaying) togglePlayPause();
//     }
// }

// function createOrUpdateAgentElement(agentId, agentData) {
//     let agentEl = agentElements[agentId];
//     let speechBubbleEl = agentSpeechBubbles[agentId];
//     if (!agentEl) {
//         agentEl = document.createElement('div');
//         agentEl.id = `agent-${agentId}`;
//         agentEl.className = 'agent';
//         agentEl.textContent = agentData.name.substring(0, 1);
//         const h = Math.floor(Math.random() * 360);
//         const s = Math.floor(Math.random() * 30 + 70);
//         const l = Math.floor(Math.random() * 20 + 40);
//         agentEl.style.backgroundColor = `hsl(${h}, ${s}%, ${l}%)`;
//         cityMapContainer.appendChild(agentEl);
//         agentElements[agentId] = agentEl;
//         speechBubbleEl = document.createElement('div');
//         speechBubbleEl.className = 'speech-bubble';
//         const speechBubbleInner = document.createElement('div');
//         speechBubbleInner.className = 'speech-bubble-inner';
//         speechBubbleEl.appendChild(speechBubbleInner);
//         agentEl.appendChild(speechBubbleEl);
//         agentSpeechBubbles[agentId] = speechBubbleEl;
//         const panel = document.createElement('div');
//         panel.className = 'agent-info-panel';
//         panel.id = `info-${agentId}`;
//         panel.innerHTML = `
//             <h2>${agentData.name}</h2>
//             <p><strong>位置:</strong> <span class="agent-location"></span></p>
//             <p><strong>行動:</strong> <span class="agent-action"></span></p>
//             <p><strong>想法:</strong> <span class="agent-thought"></span></p>
//             <hr style="border-color: #eee8d5; margin: 10px 0;">
//             <h3>今日行程</h3>
//             <ul class="agent-schedule-list"></ul>`;
//         infoPanelContainer.appendChild(panel);
//         agentInfoPanels[agentId] = {
//             location: panel.querySelector('.agent-location'),
//             action: panel.querySelector('.agent-action'),
//             thought: panel.querySelector('.agent-thought'),
//             scheduleList: panel.querySelector('.agent-schedule-list'),
//         };
//     }
//     return { agentEl, speechBubbleEl };
// }

// function updateAgents(agentsDataFromBackend) {
//     if (!agentsDataFromBackend) return;
//     for (const agentId in agentsDataFromBackend) {
//         const agentBackendData = agentsDataFromBackend[agentId];
//         const { agentEl, speechBubbleEl } = createOrUpdateAgentElement(agentId, agentBackendData);
//         const currentAgentLocationName = agentBackendData.location;
//         const targetLocationCoords = locationCoordinates[currentAgentLocationName];
//         if (targetLocationCoords) {
//             const agentWidth = agentEl.offsetWidth || 35;
//             const agentHeight = agentEl.offsetHeight || 35;
//             agentEl.style.left = (targetLocationCoords.x - agentWidth / 2) + 'px';
//             agentEl.style.top = (targetLocationCoords.y - agentHeight / 2) + 'px';
//         } else {
//             if (!agentEl.style.left) agentEl.style.left = '10px';
//             if (!agentEl.style.top) agentEl.style.top = '10px';
//         }
//         if (agentBackendData.dialogue && agentBackendData.dialogue.trim() !== "" && agentBackendData.dialogue.trim() !== "（...）") {
//             speechBubbleEl.firstChild.textContent = agentBackendData.dialogue;
//             speechBubbleEl.style.display = 'block';
//         } else {
//             speechBubbleEl.style.display = 'none';
//         }
//         const panel = agentInfoPanels[agentId];
//         if (panel) {
//             panel.location.textContent = currentAgentLocationName;
//             panel.action.textContent = agentBackendData.action;
//             panel.thought.textContent = agentBackendData.thought;
//             panel.scheduleList.innerHTML = '';
//             if (agentBackendData.schedule_today && Array.isArray(agentBackendData.schedule_today)) {
//                 agentBackendData.schedule_today.forEach(event => {
//                     const listItem = document.createElement('li');
//                     listItem.textContent = `${event.time_str} - ${event.location} - ${event.action}`;
//                     if (event.time_str === getCurrentGameTimeString()) {
//                         listItem.style.fontWeight = 'bold';
//                         listItem.style.color = '#d33682';
//                     }
//                     panel.scheduleList.appendChild(listItem);
//                 });
//             }
//         }
//         if (agentId === TARGET_AGENT_ID && currentAgentLocationName === TARGET_LOCATION_NAME) {
//             if (!locationEventTriggeredThisCycle) {
//                 console.log(`[音訊偵錯日誌] 事件觸發條件達成: 代理人 ${agentId} 在地點 ${currentAgentLocationName}`);
//                 triggerLocationAudioEvent(agentBackendData.name, currentAgentLocationName);
//                 locationEventTriggeredThisCycle = true;
//             }
//         } else if (agentId === TARGET_AGENT_ID && currentAgentLocationName !== TARGET_LOCATION_NAME) {
//             if (locationEventTriggeredThisCycle) {
//                 locationEventTriggeredThisCycle = false;
//             }
//         }
//     }
// }

// function gameStep() {
//     advanceGameTime();
//     fetchAndUpdateGameState();
// }

// function togglePlayPause() {
//     isPlaying = !isPlaying;
//     if (isPlaying) {
//         playPauseButton.textContent = '暫停';
//         gameStep();
//         gameIntervalId = setInterval(gameStep, GAME_SPEED);
//     } else {
//         playPauseButton.textContent = '播放';
//         clearInterval(gameIntervalId);
//     }
// }

// function showEventModalMessage(text, type = 'info') {
//     eventModalMessageBox.textContent = text;
//     eventModalMessageBox.className = `message-box ${type}`;
//     eventModalMessageBox.style.display = 'block';
// }
// function hideEventModalMessage() {
//     eventModalMessageBox.style.display = 'none';
// }

// function triggerLocationAudioEvent(agentName, locationName) {
//     console.log(`[音訊偵錯日誌] triggerLocationAudioEvent 被呼叫。代理人: ${agentName}, 地點: ${locationName}, PRESET_AUDIO_URL 的值是: '${PRESET_AUDIO_URL}'`);

//     eventModalTitle.textContent = `${agentName} 已抵達 ${locationName}！`;
//     eventModalMessage.textContent = `即將播放提示音: ${PRESET_AUDIO_NAME}`;
//     locationEventModal.style.display = 'flex';
//     hideEventModalMessage();

//     // --- 簡化後的警告條件 ---
//     // 僅當 PRESET_AUDIO_URL 未設定 (null, undefined, 空字串, 僅空白) 時才警告
//     if (!PRESET_AUDIO_URL || PRESET_AUDIO_URL.trim() === '') {
//             const warningMsg = '警告：PRESET_AUDIO_URL 未設定有效的音訊檔案路徑。請在程式碼中修改。';
//             console.warn("[音訊偵錯日誌] 觸發警告 (路徑未設定):", warningMsg, "目前 PRESET_AUDIO_URL:", PRESET_AUDIO_URL);
//             showEventModalMessage(warningMsg, 'warning');
//             eventModalPlayPauseButton.disabled = true;
//             return;
//     }
//     // 如果 PRESET_AUDIO_URL 是 'data_example.wav'，我們假設使用者可能故意使用範例音訊，不再因此警告，
//     // 但會在主控台提示。
//     if (PRESET_AUDIO_URL === 'data_example.wav') {
//         console.log("[音訊偵錯日誌] 提示：目前使用的是預設範例音訊 'data_example.wav'。如果這不是您期望的，請修改 PRESET_AUDIO_URL。");
//     }
//     // --- 警告條件結束 ---

//     eventModalPlayPauseButton.disabled = false;
//     console.log("[音訊偵錯日誌] 設定 eventAudioPlayer.src 為:", PRESET_AUDIO_URL);
//     eventAudioPlayer.src = PRESET_AUDIO_URL;
    
//     console.log("[音訊偵錯日誌] 呼叫 eventAudioPlayer.load()");
//     eventAudioPlayer.load(); 

//     console.log("[音訊偵錯日誌] 嘗試呼叫 eventAudioPlayer.play()");
//     const playPromise = eventAudioPlayer.play();
//     if (playPromise !== undefined) {
//         playPromise.then(_ => {
//             console.log("[音訊偵錯日誌] 音訊自動播放成功。");
//             eventModalPlayPauseButton.textContent = '暫停音訊';
//             showEventModalMessage('音訊已開始播放。', 'info');
//         }).catch(error => {
//             console.error("[音訊偵錯日誌] 音訊自動播放失敗:", error);
//             eventModalPlayPauseButton.textContent = '播放音訊';
//             showEventModalMessage('瀏覽器可能阻止了音訊自動播放。請點擊按鈕手動播放。', 'warning');
//         });
//     } else {
//         console.warn("[音訊偵錯日誌] eventAudioPlayer.play() 未返回 Promise。");
//     }
// }

// closeEventModalButton.addEventListener('click', () => {
//     locationEventModal.style.display = 'none';
//     eventAudioPlayer.pause();
//     eventAudioPlayer.currentTime = 0;
//     eventModalPlayPauseButton.textContent = '播放音訊';
//     hideEventModalMessage();
// });

// eventModalPlayPauseButton.addEventListener('click', () => {
//     console.log("[音訊偵錯日誌] 手動播放/暫停按鈕點擊。目前 src:", eventAudioPlayer.src, "paused:", eventAudioPlayer.paused, "ended:", eventAudioPlayer.ended);
//     if (!eventAudioPlayer.src || eventAudioPlayer.src === window.location.href) {
//         const errorMsg = '錯誤：沒有有效的音訊來源。請檢查 PRESET_AUDIO_URL 設定。';
//         console.error("[音訊偵錯日誌]", errorMsg);
//         showEventModalMessage(errorMsg, 'error');
//         return;
//     }
//     if (eventAudioPlayer.paused || eventAudioPlayer.ended) {
//         if(eventAudioPlayer.ended) {
//             console.log("[音訊偵錯日誌] 音訊已結束，重設 currentTime 為 0。");
//             eventAudioPlayer.currentTime = 0;
//         }
//         console.log("[音訊偵錯日誌] 手動嘗試播放音訊。");
//         eventAudioPlayer.play().catch(error => {
//             console.error("[音訊偵錯日誌] 手動播放失敗:", error);
//             showEventModalMessage(`播放失敗: ${error.message}`, 'error');
//         });
//     } else {
//         console.log("[音訊偵錯日誌] 手動嘗試暫停音訊。");
//         eventAudioPlayer.pause();
//     }
// });

// eventAudioPlayer.addEventListener('play', () => {
//     console.log("[音訊偵錯日誌] event: play (音訊開始播放)");
//     eventModalPlayPauseButton.textContent = '暫停音訊';
//     if (locationEventModal.style.display === 'flex') showEventModalMessage('音訊播放中...', 'info');
// });
// eventAudioPlayer.addEventListener('pause', () => {
//     console.log("[音訊偵錯日誌] event: pause (音訊已暫停)");
//     eventModalPlayPauseButton.textContent = '播放音訊';
// });
// eventAudioPlayer.addEventListener('ended', () => {
//     console.log("[音訊偵錯日誌] event: ended (音訊播放完畢)");
//     eventModalPlayPauseButton.textContent = '重播音訊';
//     if (locationEventModal.style.display === 'flex') showEventModalMessage('音訊播放完畢。', 'info');
// });
// eventAudioPlayer.addEventListener('error', (e) => {
//     console.error("[音訊偵錯日誌] event: error (播放時發生錯誤)", "Error Event Object:", e, "MediaError Object:", eventAudioPlayer.error);
//     let msg = "播放事件音訊時發生錯誤。";
//     if(eventAudioPlayer.error) {
//         msg += ` (錯誤碼: ${eventAudioPlayer.error.code}, 訊息: ${eventAudioPlayer.error.message || '無詳細訊息'})`;
//         switch(eventAudioPlayer.error.code) {
//             case MediaError.MEDIA_ERR_ABORTED: msg = '音訊播放被使用者中止。'; break;
//             case MediaError.MEDIA_ERR_NETWORK: msg = '下載音訊時發生網路錯誤。請檢查檔案路徑是否正確且可訪問。'; break;
//             case MediaError.MEDIA_ERR_DECODE: msg = '解碼音訊時發生錯誤。檔案可能已損壞或格式不支援。'; break;
//             case MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED: msg = '音訊來源格式不支援或路徑錯誤。請確認 PRESET_AUDIO_URL 指向有效的音訊檔案。'; break;
//             default: msg = `未知音訊錯誤 (代碼: ${eventAudioPlayer.error.code})。`; break;
//         }
//     }
//     showEventModalMessage(msg, 'error');
// });

// async function fetchAndDisplayPoem() {
//     if (poemLoadingMessage) poemLoadingMessage.style.display = 'block';
//     if (poemDisplay) poemDisplay.innerHTML = '';
//     try {
//         const response = await fetch(POEM_API_URL);
//         if (!response.ok) {
//             throw new Error(`詩歌 API 請求失敗: ${response.status} ${response.statusText}`);
//         }
//         const data = await response.json();
//         if (poemLoadingMessage) poemLoadingMessage.style.display = 'none';
//         if (data.poem) {
//             const preElement = document.createElement('pre');
//             preElement.textContent = data.poem;
//             if (poemDisplay) poemDisplay.appendChild(preElement);
//         } else {
//             if (poemDisplay) poemDisplay.textContent = "未能獲取詩詞。";
//         }
//     } catch (error) {
//         console.error("獲取詩歌失敗:", error);
//         if (poemLoadingMessage) poemLoadingMessage.style.display = 'none';
//         if (poemDisplay) poemDisplay.textContent = `獲取詩歌時出錯: ${error.message}`;
//     }
// }

// window.onload = async () => {
//     gameTimeDisplay.textContent = `時間: ${getCurrentGameTimeString()}`;
//     await fetchAndUpdateGameState();
//     await fetchAndDisplayPoem(); 

//     playPauseButton.addEventListener('click', togglePlayPause);
//     nextStepButton.addEventListener('click', () => {
//         if (isPlaying) { togglePlayPause(); }
//         gameStep();
//     });
//     console.log("偵錯[JS-INIT]: 初始化完成。");
// };